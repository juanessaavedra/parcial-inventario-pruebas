name: Pipeline de Inventario

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_test_scan:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: inventario_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d inventario_test"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

    steps:
    - name: Checkout Código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Instalar Dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Instalar Chrome y Xvfb para Tests UI
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable xvfb

    - name: Configurar Entorno de DB para Tests
      env:
        DATABASE_URL: postgresql+psycopg://postgres:admin@localhost:5432/inventario_test
        TEST_DATABASE_URL: postgresql+psycopg://postgres:admin@localhost:5432/inventario_test
        FLASK_APP: app 
      run: |
        echo "Esperando que la base de datos de PostgreSQL esté lista..."
        until pg_isready -h localhost -p 5432 -U postgres -d inventario_test; do
          echo "La base de datos no está lista aún, esperando 1 segundo..."
          sleep 1
        done
        echo "Base de datos lista."
        
        echo "Ejecutando migraciones de base de datos para tests..."
        flask db upgrade

    - name: Ejecutar Tests Unitarios
      run: |
        pytest tests/test_unit/

    - name: Ejecutar Tests de Integración
      env:
        DATABASE_URL: postgresql+psycopg://postgres:admin@localhost:5432/inventario_test
        TEST_DATABASE_URL: postgresql+psycopg://postgres:admin@localhost:5432/inventario_test
        FLASK_APP: app 
      run: |
        pytest tests/integration/

    - name: Ejecutar Tests UI (Selenium con Chrome)
      env:
        DATABASE_URL: postgresql+psycopg://postgres:admin@localhost:5432/inventario_test
        TEST_DATABASE_URL: postgresql+psycopg://postgres:admin@localhost:5432/inventario_test
        FLASK_APP: app
        DISPLAY: ':99'
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        pytest tests/ui/

    - name: Análisis Estático de Código (Bandit)
      run: |
        bandit -r app/

    - name: Análisis de Vulnerabilidades de Dependencias (Safety)
      run: |
        safety check

    - name: Verificación de Despliegue
      if: success()
      run: |
        echo "Todos los tests pasaron correctamente."
        echo "El código está listo para ser desplegado."